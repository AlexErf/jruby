#-*- mode: ruby -*-
require 'fileutils'

gemspec

version = File.read( File.join( basedir, '..', '..', 'VERSION' ) ).strip

# maven does treats prereleased version as snapshot - undo it here
ruby_version = model.version.sub( /-SNAPSHOT/, '' )
self.version nil

inherit "org.jruby:jruby-artifacts:#{version}"

name "JRuby Jars Gem"

jar 'org.jruby:jruby-stdlib', '${project.parent.version}'

plugin :dependency do
  execute_goals( 'copy',
                 :id => 'copy shaded jruby jar',
                 'artifactItems' => [ { :groupId =>  'org.jruby',
                                        :artifactId =>  'jruby-core',
                                        :version =>  '${project.version}',
                                        :classifier => :shaded,
                                        :type =>  :jar,
                                        :outputDirectory =>  '${basedir}/lib' },
                                      { :groupId =>  'org.jruby',
                                        :artifactId =>  'jruby-truffle',
                                        :version =>  '${project.version}',
                                        :classifier => :shaded,
                                        :type =>  :jar,
                                        :outputDirectory => '${basedir}/lib' } ] )

end

plugin( :clean ) do
  execute_goals( :clean,
                 :phase => :clean, 
                 :id => 'clean-lib',
                 :filesets => [ { :directory => '${basedir}/lib',
                                  :includes => ['*.jar'] } ],
                 :failOnError => false )
end

properties( 'tesla.dump.pom' => 'pom.xml',
            'tesla.dump.readonly' => true,
            'jruby.plugins.version' => '1.0.7',
            # we share the already installed gems
            'gem.home' => '${jruby.home}/lib/ruby/gems/shared',
            # need jruby_home but not jruby.home as name otherwise
            # tesla-plugin will pick the jruby from jruby.home
            'jruby_home' => '${basedir}/../../' )

  unless version =~ /-SNAPSHOT/
    properties 'jruby.home' => '${basedir}/../..'
  end

# do not push the gem during deploy phase
# the bang reuses the plugin declaration which is already in place and
# adds the extra execute_goal to it
jruby_plugin!( :gem,
               :gemspec => 'jruby-jars.gemspec',
               # tell maven to include the jar files into lib directory
               # can not do the same for the shaded jars because of all
               # those transitive dependencies
               :includeDependencies => true ) do
  execute_goals :id => 'default-push', :skip => true
end

build do
  final_name "${project.artifactId}-#{ruby_version}"
end

plugin :invoker, :properties => { 'ruby.version' => ruby_version, 'gem.home' => '${project.build.directory}/rubygems', 'gem.path' => '${project.build.directory}/rubygems' }

# vim: syntax=Ruby
